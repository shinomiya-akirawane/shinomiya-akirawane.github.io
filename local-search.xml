<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Insertion Sorting</title>
    <link href="/2022/05/21/insertSort/"/>
    <url>/2022/05/21/insertSort/</url>
    
    <content type="html"><![CDATA[<h3 id="Explanation-of-inserting-Sorting"><a href="#Explanation-of-inserting-Sorting" class="headerlink" title="Explanation of inserting Sorting"></a>Explanation of inserting Sorting</h3><p>Consider that when we have a set of pocker cards in our hands, how will we sort them? Normally, we will start with the third card, and find a right place to insert it in. This is how insertion sort works.</p><p>To start with, assuming we have this set of numbers and we want to sort it in <strong>inscending order</strong>:</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">The</span> original set of number: <span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span><br></code></pre></div></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">The</span> result set of number: <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span><br></code></pre></div></td></tr></table></figure><p>Firstly, we can consider that the first number is sorted, so we take the second number. To find the right position of 6, we need to compare it from the last number in the sorted list (which is the first number), if the number is larger than it, then we swap them. Otherwise, we move foward in the sorted list and compare it with that number. Because there is no next number in the sorted list in this condition, we will finish swap and 6 has find its position.<br><img src="/./images/is_1.PNG" alt="enter description here"></p><p><img src="/./images/is1.PNG"><br>Repeat to do the process n(the length of array) times, the whole array is sorted because all elements are inserted into correct position.</p><h3 id="Pros-and-Cons-of-inserting-Sorting"><a href="#Pros-and-Cons-of-inserting-Sorting" class="headerlink" title="Pros and Cons of inserting Sorting"></a>Pros and Cons of inserting Sorting</h3><h4 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h4><ol><li>Negligible storage space is used. (Only a temp variable)</li><li>It is stable.<h4 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h4></li><li>The time complexity is O(n<sup>2</sup>), which is bad.<h3 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h3><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java?linenums">public class insertSort &#123;<br>    public static void sort(Comparable[] list)&#123;<br>        int len = list.length;<br>        for(int i =1;i&lt;len;i++)&#123;<br>            for(int j=i;j&gt;0;j--)&#123;<br>                if(list[j].compareTo(list[j-1]) &lt; 0)&#123;<br>                    swap(list,j,j-1);<br>                &#125;<br>                else&#123;<br>                    break;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    private static void swap(Object [] list,int i,int j)&#123;<br>        Object temp = list[i];<br>        list[i] = list[j];<br>        list[j] = temp;<br>    &#125;<br>    public static void main(String[] args)&#123;<br>        Integer[] list = &#123;3,6,3,5,2,1,7&#125;;<br>        sort(list);<br>        for(int num:list)&#123;<br>            System.out.println(num);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python?linenums">def insertSort(list):<br>    for i in range(1,len(list)):<br>        for j in range(i,0,-1):<br>            if list[j-1] &gt; list[j]:<br>                temp = list[j]<br>                list[j] = list[j-1]<br>                list[j-1] = temp<br>            else:<br>                break<br>    return list<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Sorting algorithm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bubble Sorting</title>
    <link href="/2022/05/08/Bubble%20Sorting/"/>
    <url>/2022/05/08/Bubble%20Sorting/</url>
    
    <content type="html"><![CDATA[<h3 id="Explanation-of-bubble-Sorting"><a href="#Explanation-of-bubble-Sorting" class="headerlink" title="Explanation of bubble Sorting"></a>Explanation of bubble Sorting</h3><h4 id="Naive-Version"><a href="#Naive-Version" class="headerlink" title="Naive Version"></a>Naive Version</h4><p>Image that a fish at the bottom of water tank blows bubbles, the bubbles will rise in the tank until they reach the water surface. That is similar to how bubble sorting algorithm works.</p><p>To start with, assuming we have this set of numbers and we want to sort it in <strong>inscending order</strong>:</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">The</span> original set of number: <span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span><br></code></pre></div></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">The</span> result set of number: <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span><br></code></pre></div></td></tr></table></figure><p>Then we compare each two number next to each other from left to right, if the one on the left is larger than the right one, swap them:<br><img src="/./images/bbs1.jpg" alt="bbs1"></p><p>If we continue to do it n(the length of set) times, the set is sorted in order.</p><h4 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h4><p>After 1 large round, we can see that we have the largest number at the most right place. If we keep doing swaps, at n round, we will have the n<sub>st</sub> largest number set on its final position.</p><p>In this case, each large round we only need to compare the first n-m(the large round number) numbers instead of all n numbers.<br><img src="/./images/bbs2.jpg" alt="bbs2"></p><h3 id="Pros-and-Cons-of-bubble-sorting"><a href="#Pros-and-Cons-of-bubble-sorting" class="headerlink" title="Pros and Cons of bubble sorting"></a>Pros and Cons of bubble sorting</h3><h4 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h4><ol><li>The space complexity is low.</li><li>The algorithm is stable which means that the positions of two equal numbers won’t change after the sorting. This property is quite useful when sorting complex structured data.<h4 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h4></li><li>The time complexity is high which is O(n<sup>2</sup>).<h3 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h3><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python?linenums">def bubbleSort(list):<br>    for i in range(0,len(list)-1):<br>        for j in range(0,len(list)-i-1):<br>            if list[j] &gt; list[j+1]:<br>                temp = list[j]<br>                list[j] = list[j+1]<br>                list[j+1] = temp<br>    return list<br><br>print(bubbleSort([3,3,6,5,2,1,7]) )<br></code></pre></div></td></tr></table></figure><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java?linenums">class Bubble&#123;<br>    int[] list;<br>    public Bubble(int[] list)&#123;<br>        this.list = list;<br>    &#125; <br>    public int[] sort()&#123;<br>        for (int i =0;i&lt;this.list.length-1;i++)&#123;<br>            for (int j=0;j&lt;this.list.length-1-i;j++)&#123;<br>                if(list[j]&gt;list[j+1])&#123;<br>                    int temp = list[j];<br>                    list[j] = list[j+1];<br>                    list[j+1] = temp;<br>                &#125;<br>            &#125;<br>        &#125;<br>        return list;<br>    &#125;<br>&#125;<br>public class BubbleSort&#123;<br>    public static void main(String[] args) &#123; <br>        int[] list = &#123;3,3,6,5,2,1,7&#125;;<br>        Bubble bubble = new Bubble(list);<br>        int [] ans = bubble.sort();<br>        for(int num:ans)&#123;<br>            System.out.println(num);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Sorting algorithm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bucket Sorting</title>
    <link href="/2022/05/06/Bucket%20Sorting/"/>
    <url>/2022/05/06/Bucket%20Sorting/</url>
    
    <content type="html"><![CDATA[<h3 id="Explanation-of-bucket-sorting"><a href="#Explanation-of-bucket-sorting" class="headerlink" title="Explanation of bucket sorting"></a>Explanation of bucket sorting</h3><h4 id="Simple-Version"><a href="#Simple-Version" class="headerlink" title="Simple Version"></a>Simple Version</h4><p>To start with, assuming we have this set of numbers and we want to sort it in <strong>inscending order</strong>:</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">The</span> original set of number: <span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span><br></code></pre></div></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">The</span> result set of number: <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span><br></code></pre></div></td></tr></table></figure><p>To use bucket sort to finish this task, firstly we need to build buckets to contain the numbers. Note that the amount of buckets depends on the range of set:</p><p><img src="/./images/Bs1.jpg"></p><p>Then for each number in the set, we compare it with the number on each bucket from left to right, if they are same, the amount of number in the bucket increase by 1:</p><p><img src="/./images/Bs2.jpg"></p><p>After we have put all numbers in the corresponding buckets, we travel buckets from left to right to see how many numbers in each buckets and pick them out one by one. The numbers are sorted:</p><p><img src="/./images/Bs3.jpg"></p><h4 id="Universal-Version"><a href="#Universal-Version" class="headerlink" title="Universal Version"></a>Universal Version</h4><p>In the last version, we have a empty bucket unused which causes waste of money. How can we avoid this kind of waste?</p><p>We can not save it completly, but we can improve the use efficency of buckets. Consider that the number on each bucket is a range instead of certain number:<br><img src="/./images/Bs4.jpg"><br>In this case, for each number in the set, we compare it with the range on each bucket from left to right, if the number is contains in the range, put the number in the bucket. Note that the numbers in the buckets must keep inscending order(can use insertion sort, another is also ok):<br><img src="/./images/Bs5.jpg"><br>Then we travel buckets from left to right to see how many numbers in each buckets and pick them out in order. The numbers are sorted:<br><img src="/./images/Bs6.jpg"></p><p>You may notice that the <strong>choice of range is important</strong>. If the range is too small, the space cost is large. If the range is too large, the time cost is large.</p><h3 id="Pros-and-cons-of-bucket-sorting"><a href="#Pros-and-cons-of-bucket-sorting" class="headerlink" title="Pros and cons of bucket sorting"></a>Pros and cons of bucket sorting</h3><h4 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h4><ol><li>The time complexity is about O(n). The exact one is O( n* m ), m is the time complexity of the sort inside the bucket. The efficiency is high.<h4 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h4></li><li>When the data is not homogenous, the efficiency decrease. If the data is exact concertrate, the bucket sort may decrease to the sort inside the bucket.</li><li>A bad choice of range can also cause the efficiency decrease or the waste of space. The algorithm is sensed to choice of range.<h3 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h3><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python?linenums">def bucketSort(list):<br>    minNum = min(list)<br>    maxNum = max(list)<br>    buckets = []<br>    for i in range(minNum,maxNum+1,2):<br>        buckets.append([])<br>    for num in list:<br>        index = (num-minNum)//2<br>        buckets[index].append(num)<br>        buckets[index].sort()<br>    for bucket in buckets:<br>        for num in bucket:<br>            print(num)<br><br>bucketSort([3,3,6,5,2,1,7])<br></code></pre></div></td></tr></table></figure><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java?linenums">import java.util.*;<br>class Buckets&#123;<br>    public int min;<br>    public int max;<br>    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; buckets = new ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();<br>    public Buckets(int min,int max)&#123;<br>        for (int i = min;i&lt;=max;i+=2)&#123;<br>            buckets.add(new ArrayList&lt;Integer&gt;()); <br>        &#125;<br>        this.min = min;<br>        this.max = max;<br>    &#125;<br>    public void fillBucket(int n)&#123;<br>        int index = (n-this.min)/2;<br>        this.buckets.get(index).add(n);<br>        Collections.sort(this.buckets.get(index));<br>    &#125;<br>    public ArrayList&lt;Integer&gt; getAllNums()&#123;<br>        ArrayList&lt;Integer&gt; ans = new ArrayList&lt;Integer&gt;();<br>        for(ArrayList&lt;Integer&gt; bucket:this.buckets)&#123;<br>            for(int num:bucket)&#123;<br>                ans.add(num);<br>            &#125;<br>        &#125;<br>        return ans;<br>    &#125;<br>&#125;<br>public class BucketSort &#123;<br>    public static void main(String[] args) &#123; <br>        int[] list = &#123;3,3,6,5,2,1,7&#125;;<br>        Buckets buckets = new Buckets(1, 7);<br>        for(int num:list)&#123;<br>            buckets.fillBucket(num);<br>        &#125;<br>        ArrayList&lt;Integer&gt; ans = buckets.getAllNums();<br>        System.out.println(ans);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Sorting algorithm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从github clone仓库或hexo d时发生问题的解决方案</title>
    <link href="/2022/03/13/hexo-d%20problem%20solutions/"/>
    <url>/2022/03/13/hexo-d%20problem%20solutions/</url>
    
    <content type="html"><![CDATA[<p>由于github在国内被墙，所以开着vpn合并代码或者提交hexo编辑内容时常常会出现报错<br><code>fatal:unable to access &quot;网址名字&quot;</code><br><strong>解决方法：</strong><br>    1. 在hexo博客所在的文件夹里运行命令行，输入<code>git config --global --unset http.proxy</code><br>    2. 在hexo博客所在的文件夹里运行命令行， 输入<code>git config --global --unset-all https.proxy</code><br>    3.  在hexo博客所在的文件夹里运行命令行，输入<code>git config --global --unset http.sslverify</code><br>    4.  在系统设置中找到<strong>凭据管理器</strong>，删除所有带有<strong>github</strong>的凭据<br>然后问题大概就可以被解决了…（虽然有时候显示还是没上传到但是其实是上传了的，所以请随时打开网页检查是否真的未上传）这种情况就是所谓<em>玄学代码</em>了</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo，blog，vpn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Use Bootstrap5.x in Django3.x</title>
    <link href="/2022/03/13/Use%20Bootstrap%20in%20Django/"/>
    <url>/2022/03/13/Use%20Bootstrap%20in%20Django/</url>
    
    <content type="html"><![CDATA[<p>Due to rapid development of versions, some past instructions are impossible to use. This is the instrcution for newest versions.</p><h3 id="Introduction-to-Bootstrap-and-Django"><a href="#Introduction-to-Bootstrap-and-Django" class="headerlink" title="Introduction to Bootstrap and Django"></a>Introduction to Bootstrap and Django</h3><p><strong>Bootstrap</strong> is a font framework. It is based on <strong>HTML, CSS and Javascript</strong>, including reusable modules, jQuery plugin, and grid system. Thus, it is friendly to beginner. </p><p><strong>Django</strong> is a powerful WEB app framework. It has long history and completed document. The new project is with a auto-generate SQL database.</p><h3 id="Steps-to-insert-Bootstrap-in-Django"><a href="#Steps-to-insert-Bootstrap-in-Django" class="headerlink" title="Steps to insert Bootstrap in Django"></a>Steps to insert Bootstrap in Django</h3><h4 id="Download-Django-and-Bootstrap"><a href="#Download-Django-and-Bootstrap" class="headerlink" title="Download Django and Bootstrap."></a>Download Django and Bootstrap.</h4><p>This is the offical download instruction of Django: <a href="https://www.djangoproject.com/download/">https://www.djangoproject.com/download/</a><br>This is the offical download instruction of Bootstrap:<br><a href="https://getbootstrap.com/">https://getbootstrap.com/</a></p><p>To check whether they are downloaded and ready to use:<br>Open Terminal and enter:</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">python -m django --version<br></code></pre></div></td></tr></table></figure><p>If you see <strong>‘x.x.x’</strong>, Django has been set correctly.</p><p>If you can see a folder called ‘boostrap-x.x.x-dist’, Bootstrap has been set correctly.</p><h4 id="Set-up-a-new-Django-project"><a href="#Set-up-a-new-Django-project" class="headerlink" title="Set up a new Django project"></a>Set up a new Django project</h4><p>Open terminal, enter:</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">python -m django startproject * you project name *<br></code></pre></div></td></tr></table></figure><p><em>attention: make sure you are in the folder where you want to put your new project in. Otherwise you highlypossible can’t find your project after you build it.</em></p><p>Then you will see a new folder appear.</p><h4 id="Explaination-about-the-structure-of-Django-project-folder"><a href="#Explaination-about-the-structure-of-Django-project-folder" class="headerlink" title="Explaination about the structure of Django project folder"></a>Explaination about the structure of Django project folder</h4><p><img src="/images/1.png" alt="The folder structure"></p><p><strong>Often edit</strong>:</p><ul><li><strong>myWeb</strong>: the project folder</li><li><strong>urls.py</strong>: set up the path of html files, like website catalogue</li></ul><p><strong>Seldom edit</strong></p><ul><li><strong>asgi.py</strong>:  An asgi compatible web server portal</li><li><strong>wsgi.py</strong>: An wsgi compatible web server portal</li><li><strong>setting.py</strong>: Django project settings</li><li><strong>manage.py</strong>: support for Django Terminal</li></ul><p>This is just the basic files, we may add the following files as we need:</p><ul><li><strong>views.py</strong>: to write view functions</li><li><strong>model.py</strong>: to write model functions operating SQL</li><li><strong>templates</strong>: to store HTML files</li><li><strong>static</strong>: to store static files, such as: images, css, js<br><img src="/images/2.png" alt="The structure of folder after editing"></li></ul><h4 id="Explaining-about-bootstrap-files"><a href="#Explaining-about-bootstrap-files" class="headerlink" title="Explaining about bootstrap files"></a>Explaining about bootstrap files</h4><p><img src="/images/3.png" alt="Bootstrap files"></p><p>The css and js stores all inital bootstrap css files and js files. Ensure to import them to every html you write.</p><h4 id="Essential-modify-of-files"><a href="#Essential-modify-of-files" class="headerlink" title="Essential modify of files"></a>Essential modify of files</h4><ul><li><strong>In view.py and urls.py</strong>:<br>  add the following codes to views.py:<figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">from</span> django.<span class="hljs-property">shortcuts</span> <span class="hljs-keyword">import</span> render<br><span class="hljs-keyword">from</span> django.<span class="hljs-property">http</span> <span class="hljs-keyword">import</span> <span class="hljs-title class_">HttpRequest</span>,<span class="hljs-title class_">HttpResponse</span><br>def <span class="hljs-title function_">home</span>(request):<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">render</span>(request,<span class="hljs-string">&#x27;home.html&#x27;</span>)<br></code></pre></div></td></tr></table></figure>add the following code to urls.py:<figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">from</span> django.<span class="hljs-property">urls</span> <span class="hljs-keyword">import</span> path<br><span class="hljs-keyword">from</span> . <span class="hljs-keyword">import</span> views<br><span class="hljs-keyword">from</span> django.<span class="hljs-property">contrib</span> <span class="hljs-keyword">import</span> admin<br>urlpatterns = [<br>    <span class="hljs-title function_">path</span>(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.<span class="hljs-property">site</span>.<span class="hljs-property">urls</span>),<br>    <span class="hljs-title function_">path</span>(<span class="hljs-string">&#x27;home/&#x27;</span>, views.<span class="hljs-property">home</span>),<br>]<br></code></pre></div></td></tr></table></figure><em>Attention: in the newest version of Django, the original ‘url’ are changed to ‘path’</em></li><li><strong>In the home.html in templates folder</strong><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">&#123;% load <span class="hljs-keyword">static</span> %&#125;<br>&lt;head&gt;<br><br><span class="hljs-comment">// your html head code</span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span> = <span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span> = <span class="hljs-string">&quot;&#123;% static &#x27;bootstrap/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;css/style.css&#x27;%&#125;&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span> = <span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;css/home.css&#x27;%&#125;&quot;</span>/&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">// your html body code</span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;&#123;% static &#x27;bootstrap/js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure></li><li><strong>In static folder</strong></li></ul><ol><li>create new folder called ‘bootstrap’</li><li>In the bootstrap folder, create new folders: css, js<br> <img src="/images/4.png" alt="The newest structured folders"></li><li>Copy the css and js files in the <strong>downloaded</strong> bootstrap folders to static correspondence folder.</li></ol><ul><li><strong>In the settings.py</strong><br>Modify following codes, if they are not exist, add them:<figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-variable constant_">STATIC_URL</span> = <span class="hljs-string">&#x27;static/&#x27;</span><br><span class="hljs-variable constant_">STATIC_ROOT</span> = os.<span class="hljs-property">path</span>.<span class="hljs-title function_">join</span>(<span class="hljs-variable constant_">BASE_DIR</span>, <span class="hljs-string">&quot;root&quot;</span>)<br><span class="hljs-variable constant_">STATICFILES_DIRS</span> = [ <br>    os.<span class="hljs-property">path</span>.<span class="hljs-title function_">join</span>(<span class="hljs-variable constant_">BASE_DIR</span>, <span class="hljs-string">&quot;statics&quot;</span>), <br>]<br></code></pre></div></td></tr></table></figure>You can check whether the path is correct by enter following codes in Terminal:</li></ul><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">python manage.<span class="hljs-property">py</span> collectstatic<br></code></pre></div></td></tr></table></figure><p>Then all the static files in the path will appear in root.</p><h4 id="Run-the-test-server"><a href="#Run-the-test-server" class="headerlink" title="Run the test server"></a>Run the test server</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">python manage.<span class="hljs-property">py</span> runserver<br></code></pre></div></td></tr></table></figure><p><strong>You can see the page!</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>Bootstrap,Django,font</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Red-Black Tree(1)</title>
    <link href="/2022/03/03/RBTree(1)/"/>
    <url>/2022/03/03/RBTree(1)/</url>
    
    <content type="html"><![CDATA[<h3 id="Introduction-to-Red-Black-Tree"><a href="#Introduction-to-Red-Black-Tree" class="headerlink" title="Introduction to Red-Black Tree"></a>Introduction to Red-Black Tree</h3><p>Red-Black Tree is a kind of <strong>BST</strong> <em>(Binary Search Tree)</em>. It support high efficiency search <em>(log n)</em>, although it required more storage space. As we know that time can be saved by using more space. </p><p>It is quite similar to BST, the only diffence is that each node has its own color. There are five rules to judge whether the tree is a legal Red-Black Tree:</p><ol><li>Each node is either&#x3D;&#x3D;black #060606&#x3D;&#x3D; or &#x3D;&#x3D;red #FC1E00&#x3D;&#x3D;</li><li>The root node is &#x3D;&#x3D;black #060606&#x3D;&#x3D;</li><li>Each leaves is &#x3D;&#x3D;black #060606&#x3D;&#x3D;</li><li><strong>Each path from leaves to root should have same amount of &#x3D;&#x3D;black #060606&#x3D;&#x3D; nodes</strong></li><li>If a node is &#x3D;&#x3D;red  #FC1E00&#x3D;&#x3D;, its children are &#x3D;&#x3D;black #060606&#x3D;&#x3D;</li></ol><h3 id="Provements-of-time-complexity-Red-Black-Tree"><a href="#Provements-of-time-complexity-Red-Black-Tree" class="headerlink" title="Provements of time complexity Red-Black Tree"></a>Provements of time complexity Red-Black Tree</h3><p><strong>Theorem (to be prove):</strong> The maximum height of a <strong>N</strong> nodes BRTree is <strong>2log(N+1)</strong></p><p>The inverse negative proposition of original theorem is: A tree has a height of <strong>h</strong>, it has at least $2^(\frac{h}{2}) -1$ nodes. If we can prove the inverse negative proposition is true, the original one is also true.</p><p>Define <strong>bh(x)</strong> as the amount of black nodes of each path from node x to leaves. According to BRTree rule(4),<br>each path has same amount of black nodes, which means that the value of bh(x) is constant.According to BRTree rule(5), the red nodes is more than black nodes in each path: <strong>bh(x) &gt; h&#x2F;2</strong>.</p><p>In that case, the theorem we need to prove is equal to ‘A tree has a height of h, it has at least 2<sup>bh(x)</sup>-1 &#x3D;&#x3D;black #060606&#x3D;&#x3D; nodes. ‘</p><p>Then we can prove it by <em>mathematical induction</em>:<br><strong>Basic situation</strong>: when the height of tree is 0:<br>The amount of black nodes is 0 and bh(x) &#x3D; 0,2<sup>bh(x)</sup> -1 is 0, so the proposition is <strong>True</strong>.<br><strong>Assumption</strong>: Assume when the height of tree is h-1,  it has at least 2<sup>bh(x)-1</sup>-1.<br><strong>Induction</strong>: when the height of tree is <strong>h</strong>, for root,  bh(root). For lc and rc of root, bh (lc) and bh (rc) can equal to <strong>bh(x)</strong> or <strong>bh(x)-1</strong>. From our assumption, lc tree and rc tree of root include at least 2<sup>bh(x)-1</sup>-1. As for the whole tree, the amount of nodes is: 2<sup>bh(x)-1</sup>-1 + 2<sup>bh(x)-1</sup>-1 +1 &#x3D; <strong>2<sup>bh(x)</sup>-1</strong></p><p>Thus we prove that the inverse negative proposition is <strong>True</strong>. The original thorem is also True.</p>]]></content>
    
    
    
    <tags>
      
      <tag>Data Structure,Tree,Search</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
